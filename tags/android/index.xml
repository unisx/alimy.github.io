<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on 北 野</title>
    <link>http://alimy.me/tags/android/</link>
    <description>Recent content in Android on 北 野</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy;2018, Alimy; all rights reserved.</copyright>
    <lastBuildDate>Sat, 19 Mar 2016 22:45:00 +0800</lastBuildDate>
    
	<atom:link href="http://alimy.me/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android: Volley&#43;OkHttp with https</title>
      <link>http://alimy.me/post/dev_201603192245/</link>
      <pubDate>Sat, 19 Mar 2016 22:45:00 +0800</pubDate>
      
      <guid>http://alimy.me/post/dev_201603192245/</guid>
      <description>&lt;h3 id=&#34;android-network-simple&#34;&gt;Android Network Simple&lt;/h3&gt;

&lt;p&gt;This article shows how to use volley with OkHttp and security your api with https.
本文可以在&lt;a href=&#34;http://www.jianshu.com/p/e58161cbc3a4&#34; title=&#34;Android 网络--我是怎么做的: Volley+OkHttp+Https&#34;&gt;简书&lt;/a&gt;浏览。&lt;/p&gt;

&lt;h3 id=&#34;使用-okhttp-作为传输层的实现&#34;&gt;使用 OkHttp 作为传输层的实现.&lt;/h3&gt;

&lt;p&gt;Volley 默认根据 Android 系统版本使用不同的 Http 传输协议实现. 3.0 以上使用HttpUrlConnection, 2.3 以下使用 ApacheHttpStack, 参考&lt;a href=&#34;http://android-developers.blogspot.com/2011/09/androids-http-clients.html&#34;&gt;Android Http Client&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;OkHttp 相较于其它的实现有以下的优点:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;支持&lt;a href=&#34;http://zh.wikipedia.org/wiki/SPDY&#34;&gt;SPDY&lt;/a&gt;，允许连接同一主机的所有请求分享一个socket。&lt;/li&gt;
&lt;li&gt;如果SPDY不可用，会使用连接池减少请求延迟。&lt;/li&gt;
&lt;li&gt;使用GZIP压缩下载内容，且压缩操作对用户是透明的。&lt;/li&gt;
&lt;li&gt;利用响应缓存来避免重复的网络请求。&lt;/li&gt;
&lt;li&gt;当网络出现问题的时候，OKHttp会依然有效，它将从常见的连接问题当中恢复。&lt;/li&gt;
&lt;li&gt;如果你的服务端有多个IP地址，当第一个地址连接失败时，OKHttp会尝试连接其他的地址，这对IPV4和IPV6以及寄宿在多个数据中心的服务而言，是非常有必要的。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>